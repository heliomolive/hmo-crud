buildscript {
	dependencies {
		classpath 'com.h2database:h2:1.4.197'
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'net.ltgt.apt' version '0.20'
	id 'net.ltgt.apt-idea' version '0.20'
	id 'org.flywaydb.flyway' version '6.2.4'

	// JIB: plugin to generate docker images
	id 'com.google.cloud.tools.jib' version '2.2.0'
}

flyway {
	url = 'jdbc:h2:file:./build/h2'
	user = 'sa'
}

apply plugin: 'net.ltgt.apt-idea'

group = 'hmo.example.validation'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java',
					   'build/classes/java/main'] //include generated classes (i.e, lombok, mapStruct) into source dirs
		}
	}
}

ext {
	lombokVersion = '1.18.10'
	mapStructVersion = '1.3.1.Final'
	springFoxVersion = '2.9.2'
	swaggerAnnotationsVersion = '1.5.21'

}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-core'
	implementation "io.springfox:springfox-swagger2:${springFoxVersion}"
	implementation "io.springfox:springfox-swagger-ui:${springFoxVersion}"
	compileOnly "org.projectlombok:lombok:${lombokVersion}", "org.mapstruct:mapstruct:${mapStructVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}", "org.mapstruct:mapstruct-processor:${mapStructVersion}"

	// spring-boot-starter-test already include JUnit5, Mockito and AssertJ
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	runtimeOnly 'com.h2database:h2'
}

test {
	useJUnitPlatform()
}

// Docker Hub config for jib:
jib {
	to {
		image = 'heliomolive/hmo-repository:hmo-crud'
		auth {
			// DockerHub username and password provided by environment variables, which must be configured on CircleCI
			username = System.getenv('DOCKERHUB_USER')
			password = System.getenv('DOCKERHUB_PASS')
		}
	}
}